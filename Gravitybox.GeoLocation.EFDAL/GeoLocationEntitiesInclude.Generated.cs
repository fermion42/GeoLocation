//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Linq;
using System.Data.Linq.Mapping;
using Gravitybox.GeoLocation.EFDAL;

namespace Gravitybox.GeoLocation.EFDAL
{
	#region CanadaPostalCodeInclude

	/// <summary>
	/// This is a helper object for creating LINQ definitions for context includes on the CanadaPostalCode collection.
	/// </summary>
	[Serializable]
	[Table(Name = "CanadaPostalCode")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class CanadaPostalCodeInclude : Gravitybox.GeoLocation.EFDAL.IContextInclude
	{
	}

	#endregion

	#region CityInclude

	/// <summary>
	/// This is a helper object for creating LINQ definitions for context includes on the City collection.
	/// </summary>
	[Serializable]
	[Table(Name = "City")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class CityInclude : Gravitybox.GeoLocation.EFDAL.IContextInclude
	{
	}

	#endregion

	#region StateInclude

	/// <summary>
	/// This is a helper object for creating LINQ definitions for context includes on the State collection.
	/// </summary>
	[Serializable]
	[Table(Name = "State")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class StateInclude : Gravitybox.GeoLocation.EFDAL.IContextInclude
	{
	}

	#endregion

	#region ZipInclude

	/// <summary>
	/// This is a helper object for creating LINQ definitions for context includes on the Zip collection.
	/// </summary>
	[Serializable]
	[Table(Name = "Zip")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "6.0.0")]
	public partial class ZipInclude : Gravitybox.GeoLocation.EFDAL.IContextInclude
	{
	}

	#endregion

}
